Loaded IMAGENET1K_V1 pre-trained weights for Torchvision ResNet50 backbone
Training Parameters
-------------------
Initial weights   : IMAGENET1K_V1
Dataset           : /home/stu5/ranshui/FasterRCNN/VOC
Training split    : train
Evaluation split  : test
Backbone          : resnet50
Epochs            : 20
Learning rate     : 0.100000
Momentum          : 0.900000
Weight decay      : 0.000500
Dropout           : 0.000000
Augmentation      : enabled
Edge proposals    : included
CSV log           : none
Checkpoints       : disabled
Final weights file: none
Best weights file : fasterrcnn_resnet_lr=1e-1.pth
Epoch 1/20

  1%|‚ñè                                     | 8/1541 [00:04<13:46,  1.85it/s, detector_class_loss=1.6443, detector_regr_loss=nan, rpn_class_loss=0.6489, rpn_regr_loss=0.0283, total_loss=nan]
Traceback (most recent call last):
  File "/home/stu5/anaconda3/envs/prml/lib/python3.9/runpy.py", line 197, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/home/stu5/anaconda3/envs/prml/lib/python3.9/runpy.py", line 87, in _run_code
    exec(code, run_globals)
  File "/home/stu5/ranshui/FasterRCNN/pytorch/FasterRCNN/__main__.py", line 341, in <module>
    train(model = model)
  File "/home/stu5/ranshui/FasterRCNN/pytorch/FasterRCNN/__main__.py", line 171, in train
    loss = model.train_step(  # don't retain any tensors we don't need (helps memory usage)
  File "/home/stu5/ranshui/FasterRCNN/pytorch/FasterRCNN/models/faster_rcnn.py", line 297, in train_step
    rpn_regression_loss = rpn.regression_loss(predicted_box_deltas = rpn_box_deltas_map, y_true = gt_rpn_minibatch_map)
  File "/home/stu5/ranshui/FasterRCNN/pytorch/FasterRCNN/models/rpn.py", line 179, in regression_loss
    y_mask = y_mask.repeat_interleave(repeats = 4, dim = 3)
RuntimeError: CUDA error: device-side assert triggered
CUDA kernel errors might be asynchronously reported at some other API call, so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.
Compile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.